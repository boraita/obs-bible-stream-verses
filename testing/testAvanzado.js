#!/usr/bin/env node

// üß™ TESTING AVANZADO - Probar con textos de diferentes longitudes

const { testVersiculoConsistencia, calculateOptimalFontSize } = require('./testDirecto.js');

console.log('üîç TESTING AVANZADO - Diferentes longitudes de texto');
console.log('‚ïê'.repeat(60));

// Textos de diferentes longitudes para probar diferenciaci√≥n
const textosVariados = [
  { texto: "Juan 3:16", chars: 9, esperado: "muy grande (70-90px)" },
  { texto: "Porque de tal manera am√≥ Dios al mundo", chars: 39, esperado: "mediano (40-60px)" },
  { texto: "Porque de tal manera am√≥ Dios al mundo, que ha dado a su Hijo unig√©nito, para que todo aquel que en √©l cree, no se pierda, mas tenga vida eterna.", chars: 144, esperado: "peque√±o (20-35px)" },
  { texto: "Porque de tal manera am√≥ Dios al mundo, que ha dado a su Hijo unig√©nito, para que todo aquel que en √©l cree, no se pierda, mas tenga vida eterna. Este es el vers√≠culo m√°s conocido de la Biblia y habla del gran amor de Dios por la humanidad, mostrando c√≥mo Dios envi√≥ a su hijo Jes√∫s para salvarnos de nuestros pecados y darnos vida eterna a trav√©s de la fe en √âl.", chars: 367, esperado: "muy peque√±o (12-20px)" }
];

async function testDiferenciacion() {
  console.log('üéØ Probando diferenciaci√≥n del algoritmo:\n');
  
  textosVariados.forEach((item, index) => {
    console.log(`[${index + 1}] Texto: "${item.texto.substring(0, 40)}..." (${item.chars} chars)`);
    console.log(`    Esperado: ${item.esperado}`);
    
    // Probar 3 veces para verificar consistencia
    const resultados = [];
    for (let i = 0; i < 3; i++) {
      const resultado = calculateOptimalFontSize(item.texto, 800, 600, false);
      resultados.push(resultado.fontSize);
    }
    
    const esConsistente = new Set(resultados).size === 1;
    const tama√±o = resultados[0];
    
    console.log(`    Resultado: ${tama√±o}px (${esConsistente ? 'consistente' : 'inconsistente'})`);
    
    // Evaluar si el tama√±o es apropiado para la longitud
    let evaluacion = '';
    if (item.chars <= 20 && tama√±o >= 70) evaluacion = '‚úÖ Correcto';
    else if (item.chars <= 50 && tama√±o >= 40 && tama√±o < 70) evaluacion = '‚úÖ Correcto';
    else if (item.chars <= 150 && tama√±o >= 20 && tama√±o < 40) evaluacion = '‚úÖ Correcto';
    else if (item.chars > 150 && tama√±o >= 12 && tama√±o < 20) evaluacion = '‚úÖ Correcto';
    else evaluacion = '‚ùå Problem√°tico';
    
    console.log(`    Evaluaci√≥n: ${evaluacion}`);
    console.log('');
  });
}

async function testConsistenciaAlgoritmo() {
  console.log('\nüî¨ Probando consistencia con diferentes textos...\n');
  
  for (const item of textosVariados) {
    console.log(`Testing: "${item.texto.substring(0, 30)}..." (${item.chars} chars)`);
    const resultado = testVersiculoConsistencia(item.texto, 5);
    
    if (!resultado.esConsistente) {
      console.log(`‚ö†Ô∏è  PROBLEMA: Inconsistencia en texto de ${item.chars} caracteres`);
    }
  }
}

async function main() {
  await testDiferenciacion();
  await testConsistenciaAlgoritmo();
  
  console.log('\nüß™ DIAGN√ìSTICO:');
  console.log('‚ïê'.repeat(50));
  console.log('Si todos los textos dan el mismo tama√±o:');
  console.log('  - El algoritmo no est√° diferenciando por longitud correctamente');
  console.log('  - Posible problema en la l√≥gica de predicci√≥n inicial');
  console.log('  - La b√∫squeda bidireccional puede estar limitada');
  console.log('\nSi hay inconsistencias:');
  console.log('  - El algoritmo no es determin√≠stico');
  console.log('  - Hay factores variables afectando el c√°lculo');
}

main().catch(console.error);